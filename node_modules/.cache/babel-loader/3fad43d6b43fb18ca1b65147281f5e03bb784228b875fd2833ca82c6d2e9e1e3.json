{"ast":null,"code":"var _jsxFileName = \"/home/reid/Desktop/Dev/pokemon/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\nimport thunkMiddleware from 'redux-thunk';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { Card, List } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Meta\n} = Card;\nconst initialState = {\n  pokemons: [],\n  loading: false,\n  error: null\n};\nconst pokemonSlice = createSlice({\n  name: 'pokemon',\n  initialState,\n  reducers: {\n    fetchPokemonsStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchPokemonsSuccess(state, action) {\n      state.loading = false;\n      state.pokemons = action.payload;\n    },\n    fetchPokemonsFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nconst {\n  fetchPokemonsStart,\n  fetchPokemonsSuccess,\n  fetchPokemonsFailure\n} = pokemonSlice.actions;\nconst fetchPokemons = () => {\n  return async dispatch => {\n    dispatch(fetchPokemonsStart());\n    try {\n      const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=151');\n      const pokemons = response.data.results;\n      dispatch(fetchPokemonsSuccess(pokemons));\n    } catch (error) {\n      dispatch(fetchPokemonsFailure(error.message));\n    }\n  };\n};\nconst store = configureStore({\n  reducer: {\n    pokemon: pokemonSlice.reducer\n  },\n  middleware: [thunkMiddleware]\n});\nconst App = () => {\n  _s();\n  const pokemons = useSelector(state => state.pokemon.pokemons);\n  const dispatch = useDispatch();\n  const [imageSources, setImageSources] = useState({});\n  useEffect(() => {\n    dispatch(fetchPokemons());\n  }, [dispatch]);\n  useEffect(() => {\n    const promises = pokemons.map(pokemon => axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`).then(response => ({\n      id: response.data.id,\n      name: pokemon.name,\n      src: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${response.data.id}.png`\n    })));\n    Promise.all(promises).then(images => {\n      const sources = images.reduce((acc, image) => ({\n        ...acc,\n        [image.name]: image.src\n      }), {});\n      setImageSources(sources);\n    }).catch(error => console.error(error));\n  }, [pokemons]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pokemon List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      grid: {\n        gutter: 16,\n        column: 4\n      },\n      dataSource: pokemons,\n      renderItem: pokemon => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          cover: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageSources[pokemon.name],\n            alt: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Meta, {\n            title: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"6zhJPt1yCfIF+lhlCGcH8A7O8Ms=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 115,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ReactDOM","configureStore","createSlice","thunkMiddleware","Provider","useSelector","useDispatch","axios","Card","List","jsxDEV","_jsxDEV","Meta","initialState","pokemons","loading","error","pokemonSlice","name","reducers","fetchPokemonsStart","state","fetchPokemonsSuccess","action","payload","fetchPokemonsFailure","actions","fetchPokemons","dispatch","response","get","data","results","message","store","reducer","pokemon","middleware","App","_s","imageSources","setImageSources","promises","map","then","id","src","Promise","all","images","sources","reduce","acc","image","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","grid","gutter","column","dataSource","renderItem","Item","cover","alt","title","_c","render","document","getElementById","$RefreshReg$"],"sources":["/home/reid/Desktop/Dev/pokemon/src/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\nimport thunkMiddleware from 'redux-thunk';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport { \n  Card,\n  List\n } from 'antd';\n\n const { Meta } = Card;\n\nconst initialState = {\n  pokemons: [],\n  loading: false,\n  error: null,\n};\n\nconst pokemonSlice = createSlice({\n  name: 'pokemon',\n  initialState,\n  reducers: {\n    fetchPokemonsStart(state) {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchPokemonsSuccess(state, action) {\n      state.loading = false;\n      state.pokemons = action.payload;\n    },\n    fetchPokemonsFailure(state, action) {\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nconst { fetchPokemonsStart, fetchPokemonsSuccess, fetchPokemonsFailure } = pokemonSlice.actions;\n\nconst fetchPokemons = () => {\n  return async (dispatch) => {\n    dispatch(fetchPokemonsStart());\n\n    try {\n      const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=151');\n      const pokemons = response.data.results;\n      dispatch(fetchPokemonsSuccess(pokemons));\n    } catch (error) {\n      dispatch(fetchPokemonsFailure(error.message));\n    }\n  };\n};\n\nconst store = configureStore({\n  reducer: { pokemon: pokemonSlice.reducer },\n  middleware: [thunkMiddleware],\n});\n\nconst App = () => {\n  const pokemons = useSelector((state) => state.pokemon.pokemons);\n  const dispatch = useDispatch();\n  const [imageSources, setImageSources] = useState({});\n\n  useEffect(() => {\n    dispatch(fetchPokemons());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const promises = pokemons.map(pokemon =>\n      axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`)\n        .then(response => ({\n          id: response.data.id,\n          name: pokemon.name,\n          src: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${response.data.id}.png`\n        }))\n    );\n\n    Promise.all(promises)\n      .then(images => {\n        const sources = images.reduce((acc, image) => ({ ...acc, [image.name]: image.src }), {});\n        setImageSources(sources);\n      })\n      .catch(error => console.error(error));\n  }, [pokemons]);\n\n  return (\n    <div>\n      <h1>Pokemon List</h1>\n      <List\n        grid={{ gutter: 16, column: 4 }}\n        dataSource={pokemons}\n        renderItem={(pokemon) => (\n          <List.Item>\n            <Card\n              cover={\n                <img \n                src={imageSources[pokemon.name]} \n                alt={pokemon.name}\n                />\n              }\n            >\n              <Meta \n                title={pokemon.name}\n              />\n            </Card>\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}